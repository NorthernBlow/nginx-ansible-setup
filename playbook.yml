---

- name: Installing Nginx server
  hosts: all
  gather_facts: true
  gather_subset: [all, virtual]
  no_log: false
  vars:
    server: "{{ inventory_hostname }}"
    email: "root@rooted.onion"
    certificate_path: "/etc/letsencrypt/live{{ domain }}/fullchain.pem"
    # is_ssl: "{{ lookup('file', '/etc/letsencrypt/live/{{ domain }}/fullchain.pem') }}"

  vars_files:
    - vars/common.yml
    - "vars/{{ inventory_hostname if molecule_file is not defined else 'molecule' }}.yml"

  tasks:

    - name: Тест inventory_hostname
      ansible.builtin.debug:
        msg: 'vars/{{ inventory_hostname }}.yml'
    
    - name: Тест certificate_path
      ansible.builtin.debug:
        msg: "{{ certificate_path }}"

    - name: Установка nginx и certbot
      ansible.builtin.apt:
        pkg:
          - nginx
          - certbot
        state: present
        update_cache: true

    - name: Проверяем есть ли сертификаты вообще
      ansible.builtin.stat:
        path: "{{ certificate_path }}"
      register: cert_state

    - name: Устанавливаем факт отсутствия или присутствия сертов
      ansible.builtin.set_fact:
        is_ssl: "{{ cert_state.stat.exists }}"

    - name: Основной конфиг нжинкс
      ansible.builtin.copy:
        src: files/uberserver/nginx/nginx.conf
        dest: /etc/nginx/

    - name: Установка конфига нжинкс
      ansible.builtin.template:
        #        src: files/{{ server }}/nginx/sites-available/sitename.conf
        src: "{{ source }}"
        dest: /etc/nginx/sites-available/sitename.conf
        mode: '644'
        owner: root
        group: root
      vars:
        is_ssl: "{{ is_ssl != '' }}"

    - name: debug
      ansible.builtin.debug:
        msg: "{{ source }}"

    - name: Деплой сайта
      ansible.builtin.copy:
        src: files/uberserver/nginx/var/www/html/
        dest: /var/www/html/
        mode: '644'
        owner: root
        group: root

    - name: Удалить дефолтный симлинк
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Создать симлинк на рабочий сайт
      ansible.builtin.file:
        src: /etc/nginx/sites-available/sitename.conf
        dest: /etc/nginx/sites-enabled/sitename.conf
        mode: '644'
        owner: root
        group: root
        state: link

    - name: Принудительный перезапуск нжинкс
      ansible.builtin.service:
        name: nginx
        state: restarted
   
    - name: Всеотец
      ansible.builtin.shell: 
        cmd: 'certbot certonly --webroot -w /var/www/html/ --email {{ email }} --agree-tos --non-interactive -d {{ domain }}'
      register: certbot_output
      notify:
        - restart nginx
      tags: molecule-notest

    - name: Вывод сертбота
      ansible.builtin.debug:
        var: certbot_output.results
      tags: molecule-notest

    - name: Переопрделеяем переменную is_ssl
      ansible.builtin.set_fact:
        is_ssl: true

    - name: Теперь подкидываем редирект и 443 порт
      ansible.builtin.template:
        src: "{{ source }}"
        dest: /etc/nginx/sites-available/sitename.conf
        mode: '644'
        owner: root
        group: root

    - name: Дебаг переменной is_ssl
      ansible.builtin.debug:
        msg: "{{ is_ssl | string }}"

    - name: Копирование systemd демонов сертбота
      ansible.builtin.copy:
        src: files/uberserver/systemd/
        dest: /etc/systemd/system/
        mode: '644'
        owner: root
        group: root
        force: true

    - name: Запуск демонов сертбота
      ansible.builtin.service:
        name: certbot-semi-automatic
        enabled: true
        state: started

    - name: Запуск таймера сертбота
      ansible.builtin.service:
        name: certbot-semi-automatic.timer
        enabled: true
        state: started


    - name: Перезагрузить нжинкс для применения конфигурации
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: Print message
      ansible.builtin.debug:
        msg: Hello world

  handlers:
    - import_tasks: handlers/main.yml
